{"ast":null,"code":"var _jsxFileName = \"/Users/gilyasur/Documents/My Projects/dashBoard /Front/my-app/src/features/patients/Patient.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFirstName, selectToken } from \"../login/loginSlice\";\nimport { fetchPatients, selectPatients, selectPatientsError, selectPatientsStatus } from \"./patientSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Patient() {\n  _s();\n  const dispatch = useDispatch(); // Explicitly type dispatch\n  const patients = useSelector(selectPatients);\n  const status = useSelector(selectPatientsStatus);\n  const error = useSelector(selectPatientsError);\n  const userFirstName = useSelector(selectFirstName);\n  const token = useSelector(selectToken);\n  useEffect(() => {\n    if (token) {\n      dispatch(fetchPatients(token));\n    } else {\n      console.error('Token not available');\n    }\n  }, [dispatch, token]);\n  if (status === \"loading\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  if (status === \"failed\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), userFirstName, patients && patients.length > 0 ? patients.map((patient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Patient: \", patient.first_name, \" \", patient.last_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No appointments available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Patient, \"wV8P1UKWfWbb0j6iFbCnLNfnvSM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Patient;\n;\nvar _c;\n$RefreshReg$(_c, \"Patient\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","selectFirstName","selectToken","fetchPatients","selectPatients","selectPatientsError","selectPatientsStatus","jsxDEV","_jsxDEV","Patient","_s","dispatch","patients","status","error","userFirstName","token","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","patient","index","first_name","last_name","_c","$RefreshReg$"],"sources":["/Users/gilyasur/Documents/My Projects/dashBoard /Front/my-app/src/features/patients/Patient.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { selectFirstName, selectToken } from \"../login/loginSlice\";\nimport {\n    fetchPatients,\n  selectPatients,\n  selectPatientsError,\n  selectPatientsStatus,\n} from \"./patientSlice\";\n\nexport function Patient() {\n  const dispatch = useDispatch<ThunkDispatch<any, void, AnyAction>>(); // Explicitly type dispatch\n  const patients = useSelector(selectPatients);\n  const status = useSelector(selectPatientsStatus);\n  const error = useSelector(selectPatientsError);\n  const userFirstName = useSelector(selectFirstName);\n  const token = useSelector(selectToken);\n\n  useEffect(() => {\n    if (token) {\n      dispatch(fetchPatients(token));\n    } else {\n      console.error('Token not available');\n    }\n  }, [dispatch, token]);\n\n  if (status === \"loading\") {\n    return <div>Loading...</div>;\n  }\n\n  if (status === \"failed\") {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Appointments</h1>\n      {userFirstName}\n      {patients && patients.length > 0 ? (\n        patients.map((patient, index) => (\n          <div key={index}>\n\n            <p>Patient: {patient.first_name} {patient.last_name}</p>\n\n            <hr />\n          </div>\n        ))\n      ) : (\n        <div>No appointments available</div>\n      )}\n      \n    </div>\n  );\n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAGtD,SAASC,eAAe,EAAEC,WAAW,QAAQ,qBAAqB;AAClE,SACIC,aAAa,EACfC,cAAc,EACdC,mBAAmB,EACnBC,oBAAoB,QACf,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGZ,WAAW,CAAsC,CAAC,CAAC,CAAC;EACrE,MAAMa,QAAQ,GAAGZ,WAAW,CAACI,cAAc,CAAC;EAC5C,MAAMS,MAAM,GAAGb,WAAW,CAACM,oBAAoB,CAAC;EAChD,MAAMQ,KAAK,GAAGd,WAAW,CAACK,mBAAmB,CAAC;EAC9C,MAAMU,aAAa,GAAGf,WAAW,CAACC,eAAe,CAAC;EAClD,MAAMe,KAAK,GAAGhB,WAAW,CAACE,WAAW,CAAC;EAEtCJ,SAAS,CAAC,MAAM;IACd,IAAIkB,KAAK,EAAE;MACTL,QAAQ,CAACR,aAAa,CAACa,KAAK,CAAC,CAAC;IAChC,CAAC,MAAM;MACLC,OAAO,CAACH,KAAK,CAAC,qBAAqB,CAAC;IACtC;EACF,CAAC,EAAE,CAACH,QAAQ,EAAEK,KAAK,CAAC,CAAC;EAErB,IAAIH,MAAM,KAAK,SAAS,EAAE;IACxB,oBAAOL,OAAA;MAAAU,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIT,MAAM,KAAK,QAAQ,EAAE;IACvB,oBAAOL,OAAA;MAAAU,QAAA,GAAK,SAAO,EAACJ,KAAK;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EAEA,oBACEd,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBP,aAAa,EACbH,QAAQ,IAAIA,QAAQ,CAACW,MAAM,GAAG,CAAC,GAC9BX,QAAQ,CAACY,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC1BlB,OAAA;MAAAU,QAAA,gBAEEV,OAAA;QAAAU,QAAA,GAAG,WAAS,EAACO,OAAO,CAACE,UAAU,EAAC,GAAC,EAACF,OAAO,CAACG,SAAS;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAExDd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,GAJEI,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACN,CAAC,gBAEFd,OAAA;MAAAU,QAAA,EAAK;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACpC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEV;AAACZ,EAAA,CA3CeD,OAAO;EAAA,QACJV,WAAW,EACXC,WAAW,EACbA,WAAW,EACZA,WAAW,EACHA,WAAW,EACnBA,WAAW;AAAA;AAAA6B,EAAA,GANXpB,OAAO;AA2CtB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}