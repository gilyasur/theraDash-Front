{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport loginReducer from '../features/Presite/login/loginSlice';\nimport appointmentReducer from '../features/Appointment/appointmentSlice';\nimport patientReducer from '../features/patients/patientSlice';\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    login: loginReducer,\n    appointment: appointmentReducer,\n    patient: patientReducer\n  }\n});","map":{"version":3,"names":["configureStore","counterReducer","loginReducer","appointmentReducer","patientReducer","store","reducer","counter","login","appointment","patient"],"sources":["/Users/gilyasur/Documents/My Projects/dashBoard /Front/my-app/src/app/store.ts"],"sourcesContent":["import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport loginReducer from '../features/Presite/login/loginSlice';\n\nimport appointmentReducer from '../features/Appointment/appointmentSlice';\nimport patientReducer from '../features/patients/patientSlice';\n\nexport const store = configureStore({\n  \n  reducer: {\n    counter: counterReducer,\n    login: loginReducer,\n    appointment: appointmentReducer,\n    patient:patientReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n"],"mappings":"AAAA,SAASA,cAAc,QAA6B,kBAAkB;AACtE,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,YAAY,MAAM,sCAAsC;AAE/D,OAAOC,kBAAkB,MAAM,0CAA0C;AACzE,OAAOC,cAAc,MAAM,mCAAmC;AAE9D,OAAO,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAElCM,OAAO,EAAE;IACPC,OAAO,EAAEN,cAAc;IACvBO,KAAK,EAAEN,YAAY;IACnBO,WAAW,EAAEN,kBAAkB;IAC/BO,OAAO,EAACN;EACV;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}