{"ast":null,"code":"import * as jwtDecode from 'jwt-decode'; // Import all exports from jwt-decode\n\nexport const loginAsync = createAsyncThunk('login/login', async credentials => {\n  const response = await login(credentials);\n  return response.data;\n});\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loginAsync.fulfilled, (state, action) => {\n      const decodedToken = jwtDecode(action.payload.access);\n      state.token = action.payload.access;\n      state.logged = true;\n      state.status = 'loading';\n      state.firstName = decodedToken.first_name;\n      state.lastName = decodedToken.last_name;\n\n      // Store the token and additional data in sessionStorage\n      sessionStorage.setItem('token', JSON.stringify(state.token));\n      sessionStorage.setItem('firstName', JSON.stringify(state.firstName));\n      sessionStorage.setItem('lastName', JSON.stringify(state.lastName));\n    }).addCase(loginAsync.rejected, (state, action) => {\n      if (action.error.message === 'Token expired') {\n        state.token = '';\n        state.logged = false;\n        state.status = 'idle';\n        state.firstName = undefined;\n        state.lastName = undefined;\n        sessionStorage.removeItem('token');\n        sessionStorage.removeItem('firstName');\n        sessionStorage.removeItem('lastName');\n      }\n    });\n  }\n});","map":{"version":3,"names":["jwtDecode","loginAsync","createAsyncThunk","credentials","response","login","data","loginSlice","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","decodedToken","payload","access","token","logged","status","firstName","first_name","lastName","last_name","sessionStorage","setItem","JSON","stringify","rejected","error","message","undefined","removeItem"],"sources":["/Users/gilyasur/Documents/My Projects/dashBoard /Front/my-app/src/features/login/loginSlice.ts"],"sourcesContent":["import * as jwtDecode from 'jwt-decode'; // Import all exports from jwt-decode\n\nexport const loginAsync = createAsyncThunk(\n  'login/login',\n  async (credentials: { username: string; password: string }) => {\n    const response = await login(credentials);\n    return response.data;\n  }\n);\n\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginAsync.fulfilled, (state, action) => {\n        const decodedToken = jwtDecode<JwtPayload>(action.payload.access);\n\n        state.token = action.payload.access;\n        state.logged = true;\n        state.status = 'loading';\n        state.firstName = decodedToken.first_name;\n        state.lastName = decodedToken.last_name;\n\n        // Store the token and additional data in sessionStorage\n        sessionStorage.setItem('token', JSON.stringify(state.token));\n        sessionStorage.setItem('firstName', JSON.stringify(state.firstName));\n        sessionStorage.setItem('lastName', JSON.stringify(state.lastName));\n      })\n      .addCase(loginAsync.rejected, (state, action) => {\n        if (action.error.message === 'Token expired') {\n          state.token = '';\n          state.logged = false;\n          state.status = 'idle';\n          state.firstName = undefined;\n          state.lastName = undefined;\n\n          sessionStorage.removeItem('token');\n          sessionStorage.removeItem('firstName');\n          sessionStorage.removeItem('lastName');\n        }\n      });\n  },\n});\n"],"mappings":"AAAA,OAAO,KAAKA,SAAS,MAAM,YAAY,CAAC,CAAC;;AAEzC,OAAO,MAAMC,UAAU,GAAGC,gBAAgB,CACxC,aAAa,EACb,MAAOC,WAAmD,IAAK;EAC7D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,WAAW,CAAC;EACzC,OAAOC,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGC,WAAW,CAAC;EACpCC,IAAI,EAAE,OAAO;EACbC,YAAY;EACZC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,UAAU,CAACc,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChD,MAAMC,YAAY,GAAGlB,SAAS,CAAaiB,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC;MAEjEJ,KAAK,CAACK,KAAK,GAAGJ,MAAM,CAACE,OAAO,CAACC,MAAM;MACnCJ,KAAK,CAACM,MAAM,GAAG,IAAI;MACnBN,KAAK,CAACO,MAAM,GAAG,SAAS;MACxBP,KAAK,CAACQ,SAAS,GAAGN,YAAY,CAACO,UAAU;MACzCT,KAAK,CAACU,QAAQ,GAAGR,YAAY,CAACS,SAAS;;MAEvC;MACAC,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACf,KAAK,CAACK,KAAK,CAAC,CAAC;MAC5DO,cAAc,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACf,KAAK,CAACQ,SAAS,CAAC,CAAC;MACpEI,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACf,KAAK,CAACU,QAAQ,CAAC,CAAC;IACpE,CAAC,CAAC,CACDZ,OAAO,CAACb,UAAU,CAAC+B,QAAQ,EAAE,CAAChB,KAAK,EAAEC,MAAM,KAAK;MAC/C,IAAIA,MAAM,CAACgB,KAAK,CAACC,OAAO,KAAK,eAAe,EAAE;QAC5ClB,KAAK,CAACK,KAAK,GAAG,EAAE;QAChBL,KAAK,CAACM,MAAM,GAAG,KAAK;QACpBN,KAAK,CAACO,MAAM,GAAG,MAAM;QACrBP,KAAK,CAACQ,SAAS,GAAGW,SAAS;QAC3BnB,KAAK,CAACU,QAAQ,GAAGS,SAAS;QAE1BP,cAAc,CAACQ,UAAU,CAAC,OAAO,CAAC;QAClCR,cAAc,CAACQ,UAAU,CAAC,WAAW,CAAC;QACtCR,cAAc,CAACQ,UAAU,CAAC,UAAU,CAAC;MACvC;IACF,CAAC,CAAC;EACN;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}