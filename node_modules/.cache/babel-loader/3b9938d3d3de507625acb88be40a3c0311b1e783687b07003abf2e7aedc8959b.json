{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport getAppointments from './appointmentAPI ';\nconst initialState = {\n  appointments: [],\n  status: 'idle',\n  error: null\n};\nexport const fetchAppointments = createAsyncThunk('appointments/fetchAppointments', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const appointments = await getAppointments();\n    return appointments.data;\n  } catch (error) {\n    // Handle error\n    return rejectWithValue(error.message);\n  }\n});\nconst appointmentsSlice = createSlice({\n  name: 'appointments',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchAppointments.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchAppointments.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.appointments = action.payload;\n    }).addCase(fetchAppointments.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport const selectAppointments = state => state.appointment.appointments;\nexport const selectAppointmentsStatus = state => state.appointment.status;\nexport const selectAppointmentsError = state => state.appointment.error;\nexport default appointmentsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getAppointments","initialState","appointments","status","error","fetchAppointments","_","rejectWithValue","data","message","appointmentsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","selectAppointments","appointment","selectAppointmentsStatus","selectAppointmentsError","reducer"],"sources":["/Users/gilyasur/Documents/My Projects/dashBoard /Front/my-app/src/features/Appointment/appointmentSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\nimport getAppointments from './appointmentAPI ';\n\ninterface Appointment {\n  therapist: {\n    username: string;\n  };\n  patient: {\n    name: string;\n  };\n  recurring_frequency: string;\n  day_of_week?: string | null;\n  time_of_day: string;\n  location?: string | null;\n  notes?: string | null;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface AppointmentState {\n  appointments: Appointment[];\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\n  error: string | null;\n}\n\nconst initialState: AppointmentState = {\n  appointments: [],\n  status: 'idle',\n  error: null,\n};\n\nexport const fetchAppointments = createAsyncThunk<Appointment[], void>(\n  'appointments/fetchAppointments',\n  async (_, { rejectWithValue }) => {\n    try {\n      const appointments = await getAppointments();\n      return appointments.data;\n    } catch (error) {\n      // Handle error\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst appointmentsSlice = createSlice({\n  name: 'appointments',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchAppointments.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchAppointments.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.appointments = action.payload;\n      })\n      .addCase(fetchAppointments.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload as string;\n      });\n  },\n});\n\nexport const selectAppointments = (state: RootState) => state.appointment.appointments;\nexport const selectAppointmentsStatus = (state: RootState) => state.appointment.status;\nexport const selectAppointmentsError = (state: RootState) => state.appointment.error;\n\nexport default appointmentsSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,OAAOC,eAAe,MAAM,mBAAmB;AAwB/C,MAAMC,YAA8B,GAAG;EACrCC,YAAY,EAAE,EAAE;EAChBC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGP,gBAAgB,CAC/C,gCAAgC,EAChC,OAAOQ,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAChC,IAAI;IACF,MAAML,YAAY,GAAG,MAAMF,eAAe,CAAC,CAAC;IAC5C,OAAOE,YAAY,CAACM,IAAI;EAC1B,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACd;IACA,OAAOG,eAAe,CAACH,KAAK,CAACK,OAAO,CAAC;EACvC;AACF,CACF,CAAC;AAED,MAAMC,iBAAiB,GAAGX,WAAW,CAAC;EACpCY,IAAI,EAAE,cAAc;EACpBV,YAAY;EACZW,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACV,iBAAiB,CAACW,OAAO,EAAGC,KAAK,IAAK;MAC7CA,KAAK,CAACd,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDY,OAAO,CAACV,iBAAiB,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACd,MAAM,GAAG,WAAW;MAC1Bc,KAAK,CAACf,YAAY,GAAGiB,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC,CACDL,OAAO,CAACV,iBAAiB,CAACgB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAACd,MAAM,GAAG,QAAQ;MACvBc,KAAK,CAACb,KAAK,GAAGe,MAAM,CAACC,OAAiB;IACxC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAME,kBAAkB,GAAIL,KAAgB,IAAKA,KAAK,CAACM,WAAW,CAACrB,YAAY;AACtF,OAAO,MAAMsB,wBAAwB,GAAIP,KAAgB,IAAKA,KAAK,CAACM,WAAW,CAACpB,MAAM;AACtF,OAAO,MAAMsB,uBAAuB,GAAIR,KAAgB,IAAKA,KAAK,CAACM,WAAW,CAACnB,KAAK;AAEpF,eAAeM,iBAAiB,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}