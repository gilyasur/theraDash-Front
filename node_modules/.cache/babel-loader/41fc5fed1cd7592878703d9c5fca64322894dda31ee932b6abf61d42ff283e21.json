{"ast":null,"code":"var _s = $RefreshSig$();\n// src/services/appointmentsApi.ts\nimport axios from 'axios';\nimport { useSelector } from 'react-redux'; // Import useSelector from react-redux\nimport { selectToken } from '../login/loginSlice';\nconst MY_SERVER = 'http://127.0.0.1:8000/appointments/';\nconst useToken = () => {\n  _s();\n  const token = useSelector(selectToken);\n  return token;\n};\n_s(useToken, \"bD5+gKbiITcJRDYAIJK4ZSEgato=\", false, function () {\n  return [useSelector];\n});\nconst getAppointments = async () => {\n  const token = useToken;\n  try {\n    if (!token) {\n      // Handle the case where the token is not available\n      throw new Error('Authentication token not found in Redux store');\n    }\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(MY_SERVER, config);\n    return response.data;\n  } catch (error) {\n    // Handle error\n    console.error('Error fetching appointments:', error);\n    throw error;\n  }\n};\nexport default getAppointments;","map":{"version":3,"names":["axios","useSelector","selectToken","MY_SERVER","useToken","_s","token","getAppointments","Error","config","headers","Authorization","response","get","data","error","console"],"sources":["/Users/gilyasur/Documents/My Projects/dashBoard /Front/my-app/src/features/Appointment/appointmentAPI .ts"],"sourcesContent":["// src/services/appointmentsApi.ts\nimport axios, { AxiosRequestConfig } from 'axios';\nimport { useSelector } from 'react-redux';  // Import useSelector from react-redux\nimport { selectToken } from '../login/loginSlice';\n\nconst MY_SERVER = 'http://127.0.0.1:8000/appointments/';\nconst useToken = () => {\n  const token = useSelector(selectToken);\n  return token;\n };\n\nconst getAppointments = async () => {\n  const token = useToken\n\n  try {\n    if (!token) {\n      // Handle the case where the token is not available\n      throw new Error('Authentication token not found in Redux store');\n    }\n\n    const config: AxiosRequestConfig = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const response = await axios.get(MY_SERVER, config);\n    return response.data;\n  } catch (error) {\n    // Handle error\n    console.error('Error fetching appointments:', error);\n    throw error;\n  }\n};\n\nexport default getAppointments;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAA8B,OAAO;AACjD,SAASC,WAAW,QAAQ,aAAa,CAAC,CAAE;AAC5C,SAASC,WAAW,QAAQ,qBAAqB;AAEjD,MAAMC,SAAS,GAAG,qCAAqC;AACvD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,KAAK,GAAGL,WAAW,CAACC,WAAW,CAAC;EACtC,OAAOI,KAAK;AACb,CAAC;AAACD,EAAA,CAHGD,QAAQ;EAAA,QACEH,WAAW;AAAA;AAI3B,MAAMM,eAAe,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMD,KAAK,GAAGF,QAAQ;EAEtB,IAAI;IACF,IAAI,CAACE,KAAK,EAAE;MACV;MACA,MAAM,IAAIE,KAAK,CAAC,+CAA+C,CAAC;IAClE;IAEA,MAAMC,MAA0B,GAAG;MACjCC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASL,KAAM;MACjC;IACF,CAAC;IAED,MAAMM,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACV,SAAS,EAAEM,MAAM,CAAC;IACnD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACAC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAeR,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}