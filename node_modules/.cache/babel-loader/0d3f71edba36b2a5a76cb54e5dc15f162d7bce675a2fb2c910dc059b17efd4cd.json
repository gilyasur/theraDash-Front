{"ast":null,"code":"// src/services/appointmentsApi.ts\nimport axios from 'axios';\nconst MY_SERVER = 'http://127.0.0.1:8000/appointments/';\n;\nconst getAppointments = async () => {\n  try {\n    const token = sessionStorage.getItem('token'); // Retrieve the token from session storage\n\n    if (!token) {\n      // Handle the case where the token is not available\n      throw new Error('Authentication token not found in session storage');\n    }\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(MY_SERVER, config);\n    return response.data;\n  } catch (error) {\n    // Handle error\n    console.error('Error fetching appointments:', error);\n    throw error;\n  }\n};\nexport default getAppointments;","map":{"version":3,"names":["axios","MY_SERVER","getAppointments","token","sessionStorage","getItem","Error","config","headers","Authorization","response","get","data","error","console"],"sources":["/Users/gilyasur/Documents/My Projects/dashBoard /Front/my-app/src/features/Appointment/appointmentAPI .ts"],"sourcesContent":["// src/services/appointmentsApi.ts\nimport axios, { AxiosRequestConfig } from 'axios';\nimport { selectToken } from '../login/loginSlice';\nimport { useAppSelector } from '../../app/hooks';\n\nconst MY_SERVER = 'http://127.0.0.1:8000/appointments/';\n;\nconst getAppointments = async () => {\n  try {\n    \n\n    const token = sessionStorage.getItem('token'); // Retrieve the token from session storage\n\n    if (!token) {\n      // Handle the case where the token is not available\n      throw new Error('Authentication token not found in session storage');\n    }\n\n    const config: AxiosRequestConfig = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const response = await axios.get(MY_SERVER, config);\n    return response.data;\n    \n    \n  } catch (error) {\n    // Handle error\n    console.error('Error fetching appointments:', error);\n    throw error;\n  }\n};\n\nexport default getAppointments;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAA8B,OAAO;AAIjD,MAAMC,SAAS,GAAG,qCAAqC;AACvD;AACA,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IAGF,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;IAE/C,IAAI,CAACF,KAAK,EAAE;MACV;MACA,MAAM,IAAIG,KAAK,CAAC,mDAAmD,CAAC;IACtE;IAEA,MAAMC,MAA0B,GAAG;MACjCC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASN,KAAM;MACjC;IACF,CAAC;IAED,MAAMO,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACV,SAAS,EAAEM,MAAM,CAAC;IACnD,OAAOG,QAAQ,CAACE,IAAI;EAGtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACAC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAeX,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}