{"ast":null,"code":"var _jsxFileName = \"/Users/gilyasur/Documents/My Projects/dashBoard /Front/my-app/src/features/Presite/login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../../app/hooks';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport styles from \"../login/Login.module.css\";\nimport { selectLogged, loginAsync } from './loginSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Login() {\n  _s();\n  const logged = useAppSelector(selectLogged);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate(); // Use useNavigate hook\n\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = async () => {\n    // Dispatch the login action\n    await dispatch(loginAsync({\n      username,\n      password\n    }));\n\n    // Check if the login was successful\n    if (logged) {\n      // Use navigate to go to the \"/App\" route\n      navigate('/App');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"UserName:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 34\n        }, this), \"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"e8k18yv1cqQdPG1M8GN7UxhuJbs=\", false, function () {\n  return [useAppSelector, useAppDispatch, useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useAppSelector","useAppDispatch","useNavigate","styles","selectLogged","loginAsync","jsxDEV","_jsxDEV","Login","_s","logged","dispatch","navigate","username","setUserName","password","setPassword","handleLogin","children","className","row","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","button","onClick","_c","$RefreshReg$"],"sources":["/Users/gilyasur/Documents/My Projects/dashBoard /Front/my-app/src/features/Presite/login/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../../app/hooks';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport styles from \"../login/Login.module.css\"\nimport { selectLogged, loginAsync } from './loginSlice';\n\nexport function Login() {\n    const logged = useAppSelector(selectLogged);\n    const dispatch = useAppDispatch();\n    const navigate = useNavigate(); // Use useNavigate hook\n\n    const [username, setUserName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleLogin = async () => {\n        // Dispatch the login action\n        await dispatch(loginAsync({ username, password }));\n\n        // Check if the login was successful\n        if (logged) {\n            // Use navigate to go to the \"/App\" route\n            navigate('/App');\n        }\n    };\n\n    return (\n        <div>\n            <div className={styles.row}>\n               \n                    <div>\n                        UserName:<input onChange={(e) => setUserName(e.target.value)} />\n                        Password:<input onChange={(e) => setPassword(e.target.value)} />\n                        <button\n                            className={styles.button}\n                            onClick={handleLogin}>\n                            Login\n                        </button>\n                    </div>\n                \n            </div>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,cAAc,QAAQ,oBAAoB;AACnE,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,SAASC,YAAY,EAAEC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,OAAO,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGV,cAAc,CAACI,YAAY,CAAC;EAC3C,MAAMO,QAAQ,GAAGV,cAAc,CAAC,CAAC;EACjC,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,MAAMN,QAAQ,CAACN,UAAU,CAAC;MAAEQ,QAAQ;MAAEE;IAAS,CAAC,CAAC,CAAC;;IAElD;IACA,IAAIL,MAAM,EAAE;MACR;MACAE,QAAQ,CAAC,MAAM,CAAC;IACpB;EACJ,CAAC;EAED,oBACIL,OAAA;IAAAW,QAAA,eACIX,OAAA;MAAKY,SAAS,EAAEhB,MAAM,CAACiB,GAAI;MAAAF,QAAA,eAEnBX,OAAA;QAAAW,QAAA,GAAK,WACQ,eAAAX,OAAA;UAAOc,QAAQ,EAAGC,CAAC,IAAKR,WAAW,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,aACvD,eAAArB,OAAA;UAAOc,QAAQ,EAAGC,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChErB,OAAA;UACIY,SAAS,EAAEhB,MAAM,CAAC0B,MAAO;UACzBC,OAAO,EAAEb,WAAY;UAAAC,QAAA,EAAC;QAE1B;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACnB,EAAA,CApCeD,KAAK;EAAA,QACFR,cAAc,EACZC,cAAc,EACdC,WAAW;AAAA;AAAA6B,EAAA,GAHhBvB,KAAK;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}