{"ast":null,"code":"var _s = $RefreshSig$();\n// src/services/appointmentsApi.ts\nimport axios from 'axios';\nimport { selectToken } from '../login/loginSlice';\nimport { useAppSelector } from '../../app/hooks';\nconst MY_SERVER = 'http://127.0.0.1:8000/appointments/';\n;\nconst getAppointments = async () => {\n  _s();\n  try {\n    const token = useAppSelector(selectToken);\n    if (!token) {\n      // Handle the case where the token is not available\n      throw new Error('Authentication token not found in session storage');\n    }\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(MY_SERVER, config);\n    return response.data;\n  } catch (error) {\n    // Handle error\n    console.error('Error fetching appointments:', error);\n    throw error;\n  }\n};\n_s(getAppointments, \"lUUOEs3r5j8+ILJaqVL934+ziqo=\", false, function () {\n  return [useAppSelector];\n});\nexport default getAppointments;","map":{"version":3,"names":["axios","selectToken","useAppSelector","MY_SERVER","getAppointments","_s","token","Error","config","headers","Authorization","response","get","data","error","console"],"sources":["/Users/gilyasur/Documents/My Projects/dashBoard /Front/my-app/src/features/Appointment/appointmentAPI .ts"],"sourcesContent":["// src/services/appointmentsApi.ts\nimport axios, { AxiosRequestConfig } from 'axios';\nimport { selectToken } from '../login/loginSlice';\nimport { useAppSelector } from '../../app/hooks';\n\nconst MY_SERVER = 'http://127.0.0.1:8000/appointments/';\n;\nconst getAppointments = async () => {\n  try {\n    \n    const token = useAppSelector(selectToken);\n    \n\n    if (!token) {\n      // Handle the case where the token is not available\n      throw new Error('Authentication token not found in session storage');\n    }\n\n    const config: AxiosRequestConfig = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const response = await axios.get(MY_SERVER, config);\n    return response.data;\n    \n    \n  } catch (error) {\n    // Handle error\n    console.error('Error fetching appointments:', error);\n    throw error;\n  }\n};\n\nexport default getAppointments;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAA8B,OAAO;AACjD,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,cAAc,QAAQ,iBAAiB;AAEhD,MAAMC,SAAS,GAAG,qCAAqC;AACvD;AACA,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EAAAC,EAAA;EAClC,IAAI;IAEF,MAAMC,KAAK,GAAGJ,cAAc,CAACD,WAAW,CAAC;IAGzC,IAAI,CAACK,KAAK,EAAE;MACV;MACA,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;IACtE;IAEA,MAAMC,MAA0B,GAAG;MACjCC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASJ,KAAM;MACjC;IACF,CAAC;IAED,MAAMK,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACT,SAAS,EAAEK,MAAM,CAAC;IACnD,OAAOG,QAAQ,CAACE,IAAI;EAGtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACAC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAACT,EAAA,CA1BID,eAAe;EAAA,QAGHF,cAAc;AAAA;AAyBhC,eAAeE,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}