{"ast":null,"code":"var _jsxFileName = \"/Users/gilyasur/Documents/My Projects/dashBoard /Front/my-app/src/features/Presite/login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../../app/hooks';\nimport { redirect } from \"react-router-dom\";\nimport styles from \"../login/Login.module.css\";\nimport { selectLogged, loginAsync } from './loginSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Login() {\n  _s();\n  const logged = useAppSelector(selectLogged);\n  const dispatch = useAppDispatch();\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = async () => {\n    // Dispatch the login action\n    await dispatch(loginAsync({\n      username,\n      password\n    }));\n\n    // Check if the login was successful\n    if (logged) {\n      return redirect(\"/app\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: logged ? /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"UserName:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 34\n        }, this), \"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"U+746ZAKMsEdarmtUHs15VBWAlA=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useAppSelector","useAppDispatch","redirect","styles","selectLogged","loginAsync","jsxDEV","_jsxDEV","Login","_s","logged","dispatch","username","setUserName","password","setPassword","handleLogin","children","className","row","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","button","onClick","_c","$RefreshReg$"],"sources":["/Users/gilyasur/Documents/My Projects/dashBoard /Front/my-app/src/features/Presite/login/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../../app/hooks';\nimport { redirect } from \"react-router-dom\";\n\n\n\nimport styles from \"../login/Login.module.css\"\nimport { selectLogged, loginAsync } from './loginSlice';\n\nexport function Login() {\n    const logged = useAppSelector(selectLogged);\n    const dispatch = useAppDispatch();\n\n\n    const [username, setUserName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleLogin = async () => {\n        // Dispatch the login action\n        await dispatch(loginAsync({ username, password }));\n\n        // Check if the login was successful\n        if (logged) {\n            return redirect(\"/app\");\n        }\n    };\n\n    return (\n        <div>\n            <div className={styles.row}>\n                {logged ? (\n                    <button>Logout</button>\n                ) : (\n                    <div>\n                        UserName:<input onChange={(e) => setUserName(e.target.value)} />\n                        Password:<input onChange={(e) => setPassword(e.target.value)} />\n                        <button\n                            className={styles.button}\n                            onClick={handleLogin}>\n                            Login\n                        </button>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,cAAc,QAAQ,oBAAoB;AACnE,SAASC,QAAQ,QAAQ,kBAAkB;AAI3C,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,SAASC,YAAY,EAAEC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,OAAO,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGV,cAAc,CAACI,YAAY,CAAC;EAC3C,MAAMO,QAAQ,GAAGV,cAAc,CAAC,CAAC;EAGjC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,MAAML,QAAQ,CAACN,UAAU,CAAC;MAAEO,QAAQ;MAAEE;IAAS,CAAC,CAAC,CAAC;;IAElD;IACA,IAAIJ,MAAM,EAAE;MACR,OAAOR,QAAQ,CAAC,MAAM,CAAC;IAC3B;EACJ,CAAC;EAED,oBACIK,OAAA;IAAAU,QAAA,eACIV,OAAA;MAAKW,SAAS,EAAEf,MAAM,CAACgB,GAAI;MAAAF,QAAA,EACtBP,MAAM,gBACHH,OAAA;QAAAU,QAAA,EAAQ;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAEvBhB,OAAA;QAAAU,QAAA,GAAK,WACQ,eAAAV,OAAA;UAAOiB,QAAQ,EAAGC,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,aACvD,eAAAhB,OAAA;UAAOiB,QAAQ,EAAGC,CAAC,IAAKV,WAAW,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChEhB,OAAA;UACIW,SAAS,EAAEf,MAAM,CAACyB,MAAO;UACzBC,OAAO,EAAEb,WAAY;UAAAC,QAAA,EAAC;QAE1B;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACd,EAAA,CArCeD,KAAK;EAAA,QACFR,cAAc,EACZC,cAAc;AAAA;AAAA6B,EAAA,GAFnBtB,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}