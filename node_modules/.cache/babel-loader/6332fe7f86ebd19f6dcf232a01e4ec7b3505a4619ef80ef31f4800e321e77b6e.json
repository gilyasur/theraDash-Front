{"ast":null,"code":"// src/services/appointmentsApi.ts\nimport axios from 'axios';\nconst MY_SERVER = 'http://127.0.0.1:8000/appointments/';\nconst getAppointments = async () => {\n  const token = sessionStorage.getItem('token');\n  if (!token) {\n    // Handle the case where the token is not available\n    throw new Error('Authentication token not found in session storage');\n  }\n  const headers = {\n    Authorization: `Bearer ${token}`\n  };\n  const response = await axios.get(MY_SERVER, {\n    headers\n  });\n  console.log(response);\n  return response.data;\n};\nexport default getAppointments;","map":{"version":3,"names":["axios","MY_SERVER","getAppointments","token","sessionStorage","getItem","Error","headers","Authorization","response","get","console","log","data"],"sources":["/Users/gilyasur/Documents/My Projects/dashBoard /Front/my-app/src/features/Appointment/appointmentAPI .ts"],"sourcesContent":["// src/services/appointmentsApi.ts\nimport axios from 'axios';\n\nconst MY_SERVER = 'http://127.0.0.1:8000/appointments/';\n\nconst getAppointments = async () => {\n  const token = sessionStorage.getItem('token');\n\n  if (!token) {\n    // Handle the case where the token is not available\n    throw new Error('Authentication token not found in session storage');\n  }\n\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n\n  const response = await axios.get(MY_SERVER, { headers });\n  console.log(response);\n  \n  return response.data;\n};\n\nexport default getAppointments;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAG,qCAAqC;AAEvD,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAE7C,IAAI,CAACF,KAAK,EAAE;IACV;IACA,MAAM,IAAIG,KAAK,CAAC,mDAAmD,CAAC;EACtE;EAEA,MAAMC,OAAO,GAAG;IACdC,aAAa,EAAG,UAASL,KAAM;EACjC,CAAC;EAED,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACT,SAAS,EAAE;IAAEM;EAAQ,CAAC,CAAC;EACxDI,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EAErB,OAAOA,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,eAAeX,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}