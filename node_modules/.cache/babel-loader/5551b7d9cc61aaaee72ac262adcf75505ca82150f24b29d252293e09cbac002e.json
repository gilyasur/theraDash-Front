{"ast":null,"code":"// src/services/appointmentsApi.ts\nimport axios from 'axios';\nconst MY_SERVER = 'http://127.0.0.1:8000/appointments/';\nexport function getAppointments() {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const token = sessionStorage.getItem('token'); // Retrieve the token from session storage\n\n      if (!token) {\n        // Handle the case where the token is not available\n        throw new Error('Authentication token not found in session storage');\n      }\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios.get(MY_SERVER, config);\n      console.log(response.data);\n      resolve({\n        data: response.data\n      });\n    } catch (error) {\n      // Handle error\n      console.error('Error fetching appointments:', error);\n      reject(error);\n    }\n  });\n}","map":{"version":3,"names":["axios","MY_SERVER","getAppointments","Promise","resolve","reject","token","sessionStorage","getItem","Error","config","headers","Authorization","response","get","console","log","data","error"],"sources":["/Users/gilyasur/Documents/My Projects/dashBoard /Front/my-app/src/features/Appointment/appointmentAPI .ts"],"sourcesContent":["// src/services/appointmentsApi.ts\nimport axios, { AxiosRequestConfig } from 'axios';\n\nconst MY_SERVER = 'http://127.0.0.1:8000/appointments/';\n\nexport function getAppointments() {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const token = sessionStorage.getItem('token'); // Retrieve the token from session storage\n\n      if (!token) {\n        // Handle the case where the token is not available\n        throw new Error('Authentication token not found in session storage');\n      }\n\n      const config: AxiosRequestConfig = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n\n      const response = await axios.get(MY_SERVER, config);\n      console.log(response.data);\n      resolve({ data: response.data });\n\n    } catch (error) {\n      // Handle error\n      console.error('Error fetching appointments:', error);\n      reject(error);\n    }\n  });\n}\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAA8B,OAAO;AAEjD,MAAMC,SAAS,GAAG,qCAAqC;AAEvD,OAAO,SAASC,eAAeA,CAAA,EAAG;EAChC,OAAO,IAAIC,OAAO,CAAC,OAAOC,OAAO,EAAEC,MAAM,KAAK;IAC5C,IAAI;MACF,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;MAE/C,IAAI,CAACF,KAAK,EAAE;QACV;QACA,MAAM,IAAIG,KAAK,CAAC,mDAAmD,CAAC;MACtE;MAEA,MAAMC,MAA0B,GAAG;QACjCC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASN,KAAM;QACjC;MACF,CAAC;MAED,MAAMO,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACb,SAAS,EAAES,MAAM,CAAC;MACnDK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC1Bb,OAAO,CAAC;QAAEa,IAAI,EAAEJ,QAAQ,CAACI;MAAK,CAAC,CAAC;IAElC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd;MACAH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDb,MAAM,CAACa,KAAK,CAAC;IACf;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}